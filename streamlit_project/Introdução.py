import streamlit as st

# crescimento do lucro dos filmes no tempo
# analisar os outliners
# corrigir pela infla√ß√£o
# correla√ß√£o entre faturam
# ento e or√ßamento e tentar achar um valor √≥timo/ mais eficiente
# tentar prever o crescimento da industria
# crescimento do or√ßamento no tempo
# crescimento do faturamento no tempo

st.title("Painel de Administra√ß√£o do MoviePicker")
st.write("O Painel de Administra√ß√£o do MoviePicker √© uma ferramenta criada para auxiliar na an√°lise dos dados do sistema e fornecer insights que podem ser usados para tomada de decis√£o.")
st.markdown(
    """
    **üëà Selecione uma guia** para ver cada ferramenta ou an√°lise.
    #### P√°ginas
    - Introdu√ß√£o: Nossa p√°gina principal. Apertar nela o trar√° de volta para c√°!
    - Pr√©-processamento: Aqui est√£o documentadas as etapas necess√°rias para tratar o dataset.
    - Dataset: Descri√ß√£o detalhada das mais diversas informa√ß√µes a respeito do dataset e suas vari√°veis.
    - Visualizar filme: Busque as principais informa√ß√µes a respeito de um filme.
    - Comparador de filmes: Compare diretamente as principais m√©tricas de v√°rios filmes.
    - Vis√£o global: Observe a rela√ßao de lucro e investimento de todos os filmes.
    - Mais em breve :D

    #### Mais informa√ß√µes?

    - Visite nosso [Github](https://github.com/gui-henri/PISI3)
    - Visualize o [Dataset](https://www.kaggle.com/datasets/tmdb/tmdb-movie-metadata?select=tmdb_5000_movies.csv)

    """
)
st.sidebar.success("Selecione acima a p√°gina que gostaria de visitar")


# Avatar, Indiana Jones

# Or√ßamento, Faturamento, Popularidade, Tempo de dura√ß√£o, N√∫mero de votos, Nota
#df.set_index('original_title', inplace=True)

